<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.8" maxVersion="1.8" type="org.netbeans.modules.form.forminfo.JDialogFormInfo">
  <NonVisualComponents>
    <Menu class="javax.swing.JMenuBar" name="transformMenuBar">
      <Properties>
        <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[115, 23]"/>
        </Property>
      </Properties>
      <SubComponents>
        <Menu class="javax.swing.JMenu" name="fileMenu">
          <Properties>
            <Property name="mnemonic" type="int" value="71"/>
            <Property name="text" type="java.lang.String" value="File"/>
            <Property name="toolTipText" type="java.lang.String" value="Edit or change the current counts file."/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="fileMenuActionPerformed"/>
          </Events>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="newFile">
              <Properties>
                <Property name="text" type="java.lang.String" value="New"/>
                <Property name="toolTipText" type="java.lang.String" value="Create a new counts file."/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="newFileActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="openFile">
              <Properties>
                <Property name="text" type="java.lang.String" value="Open"/>
                <Property name="toolTipText" type="java.lang.String" value="Load a counts file."/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="openFileActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="addFromFile">
              <Properties>
                <Property name="text" type="java.lang.String" value="Add From..."/>
                <Property name="toolTipText" type="java.lang.String" value="Add from a counts file."/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="addFromFileActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="saveFile">
              <Properties>
                <Property name="text" type="java.lang.String" value="Save"/>
                <Property name="toolTipText" type="java.lang.String" value="Save the current counts file."/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="saveFileActionPerformed"/>
              </Events>
            </MenuItem>
          </SubComponents>
        </Menu>
        <Menu class="javax.swing.JMenu" name="generatorWindowMenu1">
          <Properties>
            <Property name="label" type="java.lang.String" value="Window"/>
          </Properties>
          <Events>
            <EventHandler event="menuSelected" listener="javax.swing.event.MenuListener" parameters="javax.swing.event.MenuEvent" handler="generatorWindowMenu1MenuSelected"/>
          </Events>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="closeWindowMI2">
              <Properties>
                <Property name="mnemonic" type="int" value="67"/>
                <Property name="text" type="java.lang.String" value="Close Window"/>
                <Property name="toolTipText" type="java.lang.String" value="Closes the current window (exits program if there are no other windows)"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="closeWindowMI2ActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="cascadeMI2">
              <Properties>
                <Property name="mnemonic" type="int" value="65"/>
                <Property name="text" type="java.lang.String" value="Cascade Windows"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="cascadeMI2ActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JSeparator" name="windowMenuSeparator2">
            </MenuItem>
          </SubComponents>
        </Menu>
      </SubComponents>
    </Menu>
  </NonVisualComponents>
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="2"/>
    <Property name="title" type="java.lang.String" value="Interval Learning Controls"/>
    <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
      <Dimension value="[1000, 850]"/>
    </Property>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="menuBar" type="java.lang.String" value="transformMenuBar"/>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>
  </SyntheticProperties>
  <Events>
    <EventHandler event="windowClosed" listener="java.awt.event.WindowListener" parameters="java.awt.event.WindowEvent" handler="closeWindow"/>
  </Events>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,3,87,0,0,4,76"/>
  </AuxValues>

  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout"/>
  <SubComponents>
    <Container class="javax.swing.JTabbedPane" name="transformPane">
      <Properties>
        <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
          <Color blue="d7" green="d7" red="da" type="rgb"/>
        </Property>
        <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[1200, 700]"/>
        </Property>
        <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[1200, 700]"/>
        </Property>
      </Properties>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout" value="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout$GridBagConstraintsDescription">
          <GridBagConstraints gridX="0" gridY="0" gridWidth="1" gridHeight="1" fill="1" ipadX="50" ipadY="0" insetsTop="0" insetsLeft="0" insetsBottom="0" insetsRight="0" anchor="18" weightX="1.0" weightY="1.0"/>
        </Constraint>
      </Constraints>

      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout"/>
      <SubComponents>
        <Container class="javax.swing.JPanel" name="intervalLearningPanelHolder">
          <Constraints>
            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout$JTabbedPaneConstraintsDescription">
              <JTabbedPaneConstraints tabName="Interval Learning">
                <Property name="tabTitle" type="java.lang.String" value="Interval Learning"/>
              </JTabbedPaneConstraints>
            </Constraint>
          </Constraints>

          <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridLayout">
            <Property name="columns" type="int" value="0"/>
            <Property name="rows" type="int" value="1"/>
          </Layout>
        </Container>
        <Container class="javax.swing.JPanel" name="jPanel1">
          <Constraints>
            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout$JTabbedPaneConstraintsDescription">
              <JTabbedPaneConstraints tabName="Help">
                <Property name="tabTitle" type="java.lang.String" value="Help"/>
              </JTabbedPaneConstraints>
            </Constraint>
          </Constraints>

          <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout"/>
          <SubComponents>
            <Container class="javax.swing.JScrollPane" name="jScrollPane1">
              <AuxValues>
                <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
              </AuxValues>
              <Constraints>
                <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
                  <BorderConstraints direction="Center"/>
                </Constraint>
              </Constraints>

              <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
              <SubComponents>
                <Component class="javax.swing.JTextArea" name="jTextArea1">
                  <Properties>
                    <Property name="columns" type="int" value="20"/>
                    <Property name="rows" type="int" value="5"/>
                    <Property name="text" type="java.lang.String" value="Help For Interval Learning:&#xa;&#xa;About Interval Learning&#xa;&#x9;What is Interval Learning?&#xa;&#x9;&#x9;Interval Learning is the process of learning the probabilities with which certain intervals&#xa;&#x9;&#x9;are followed by other intervals in a solo or a collection of solos. These transition probabilities&#xa;&#x9;&#x9;can be used to form an abstract structure called a Markov Chain. A Markov chain is a graph composed of nodes and edges.&#xa;&#x9;&#x9;It is traversed by moving from node to node via weighted edges. Edges with higher weights are more likely to be traversed.&#xa;&#x9;&#x9;In our graph, the nodes represent intervals and the edges carry weights corresponding to transition probabilities.&#xa;&#xa;&#x9;Why is it Useful?&#xa;&#x9;&#x9;Interval learning is useful for both practical and pedagogical reasons.&#xa;&#x9;&#x9;From a practical standpoint, interval learning is useful because it can be used to create original improvisation.&#xa;&#x9;&#x9;From a pedagogical standpoint, interval learning is useful because it can reveal certain musical insights.&#xa;&#x9;&#x9;For example, the trend that large leaps are often followed by stepwise motion in the opposite direction can be&#xa;&#x9;&#x9;accurately captured by interval learning.&#xa;&#xa;Reading the Source -&gt; Destination Table&#xa;&#x9;To read a probability off the Source -&gt; Destination Table, follow these steps:&#xa;&#x9;&#x9;1.&#xa;&#x9;&#x9;&#x9;Start on the left-hand side of the table. Choose a source interval that you are interested in.&#xa;&#x9;&#x9;&#x9;Intervals are described by their direction and their size in semitones. &#xa;&#x9;&#x9;&#x9;(For example, -2 corresponds to moving down by a whole step.)&#xa;&#x9;&#x9;2.&#xa;&#x9;&#x9;&#x9;Now look at the top edge of the table. Choose a destination interval that you are interested in.&#xa;&#x9;&#x9;&#x9;Move to the right across the row containing your source interval until you land in the column&#xa;&#x9;&#x9;&#x9;containing your destination interval. The probability in that cell represents the probabiliity&#xa;&#x9;&#x9;&#x9;that your source interval will be followed by your destination interval.&#xa;&#xa;Loading &amp; Saving Files&#xa;&#x9;To load or save files, open the File Menu in the upper left corner.&#xa;&#x9;You will be presented with the following options:&#xa;&#x9;&#x9;New&#xa;&#x9;&#x9;&#x9;Create a new file. (NOTE: Any unsaved changes will be lost.)&#xa;&#x9;&#x9;Open&#xa;&#x9;&#x9;&#x9;Open a file saved in your counts directory. (NOTE: Any unsaved changes will be lost.)&#xa;&#x9;&#x9;Add From...&#xa;&#x9;&#x9;&#x9;Add probabiliites from a file in your .counts directory to the running total.&#xa;&#x9;&#x9;Save&#xa;&#x9;&#x9;&#x9;Save the current file to your counts directory. You will be prompted for a filename.&#xa;&#xa;Learn Interval Probabilities&#xa;&#x9;Add to total?&#xa;&#x9;&#x9;Yes&#xa;&#x9;&#x9;&#x9;When this option is selected, every time you learn from a solo,&#xa;&#x9;&#x9;&#x9;the interval probabilities learned will be added to the running total.&#xa;&#x9;&#x9;No&#xa;&#x9;&#x9;&#x9;When this option is selected, every time you learn from a solo,&#xa;&#x9;&#x9;&#x9;the interval probabilities learned will replace the old interval probabilities.&#xa;&#x9;Learn from:&#xa;&#x9;&#x9;This Chorus&#xa;&#x9;&#x9;&#x9;When this option is selected, interval probabilities will be learned from&#xa;&#x9;&#x9;&#x9;only the chorus that you&apos;re currently looking at.&#xa;&#x9;&#x9;All Choruses&#xa;&#x9;&#x9;&#x9;When this option is selected, interval probabilities will be learned from&#xa;&#x9;&#x9;&#x9;all the choruses in the leadsheet.&#xa;&#x9;Learn!&#xa;&#x9;&#x9;Click this button to learn interval probabilities.&#xa;&#x9;Start Over&#xa;&#x9;&#x9;Click this button to clear all interval probabilities.&#xa;&#xa;View Options&#xa;&#x9;Toggle View:&#xa;&#x9;&#x9;Probabilities / Counts&#xa;&#x9;&#x9;&#x9;Probabilities&#xa;&#x9;&#x9;&#x9;&#x9;When this option is selected, the probabilities of moving from&#xa;&#x9;&#x9;&#x9;&#x9;any source interval to any destination interval will be displayed.&#xa;&#x9;&#x9;&#x9;Counts&#xa;&#x9;&#x9;&#x9;&#x9;When this option is selected, the number of times that&#xa;&#x9;&#x9;&#x9;&#x9;any source interval moved to any destination interval&#xa;&#x9;&#x9;&#x9;&#x9;in the solo(s) that were learned from will be displayed.&#xa;&#x9;&#x9;First Order / Second Order&#xa;&#x9;&#x9;&#x9;First Order&#xa;&#x9;&#x9;&#x9;&#x9;When this option is selected, the probabilities or counts&#xa;&#x9;&#x9;&#x9;&#x9;corresponding to the source interval moving to the destination interval will be displayed.&#xa;&#x9;&#x9;&#x9;Second Order&#xa;&#x9;&#x9;&#x9;&#x9;When this option is selected, the 1st Source Interval Slider will become activated.&#xa;&#x9;&#x9;&#x9;&#x9;The probabilities or counts corresponding to the 1st source interval moving to the source&#xa;&#x9;&#x9;&#x9;&#x9;interval and then to the destination interval will be displayed.&#xa;&#x9;1st Source Interval:&#xa;&#x9;&#x9;This slider will become activated if you toggle the First Order / Second Order button to Second Order.&#xa;&#x9;&#x9;Dragging this slider left or right will change the display to correspond to the probabilities associated with&#xa;&#x9;&#x9;moving from the 1st source interval to the source interval on the left to the destination interval on the top.&#xa;&#xa;Solo Options&#xa;&#x9;Choose Range&#xa;&#x9;&#x9;Clicking this button will open a window containing a piano that will allow you to select a range for your solo.&#xa;&#x9;Merge Same Notes&#xa;&#x9;&#x9;Checking this box will merge consecutive notes that have the same pitch.&#xa;&#x9;Rectify&#xa;&#x9;&#x9;Checking this box will rectify your solo.&#xa;&#x9;Chord, Color, Approach&#xa;&#x9;&#x9;You can check any combination of these boxes to indicate which types of notes you&apos;d like to rectify your solo to.&#xa;&#x9;&#x9;The default setting is to rectify to chord and approach tones.&#xa;&#x9;&#x9;&#xa;Generate Solo&#xa;&#x9;Rhythm&#xa;&#x9;&#x9;Eighths&#xa;&#x9;&#x9;&#x9;This will generate a solo composed only of eighth notes.&#xa;&#x9;&#x9;Chorus 1&#xa;&#x9;&#x9;&#x9;This will generate a solo that has the same rhythm as Chorus 1.&#xa;&#x9;&#x9;Grammar&#xa;&#x9;&#x9;&#x9;This will generate a solo with a rhythm created by the grammar that is currently selected in the main window.&#xa;&#x9;Order&#xa;&#x9;&#x9;First&#xa;&#x9;&#x9;&#x9;Select this option to generate a solo using a first-order Markov chain.&#xa;&#x9;&#x9;&#x9;This option works best when you have not learned very many probabilities.&#xa;&#x9;&#x9;Second&#xa;&#x9;&#x9;&#x9;Select this option to generate a solo using a second-order Markov chain.&#xa;&#x9;&#x9;&#x9;This option works best when you have learned a lot of probabilities.&#xa;&#x9;Generate Solo&#xa;&#x9;&#x9;Click this button to generate and play a solo based on interval probabilities!"/>
                  </Properties>
                </Component>
              </SubComponents>
            </Container>
          </SubComponents>
        </Container>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
